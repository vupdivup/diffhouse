{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"diffhouse","text":"<p>diffhouse is a Git metadata extraction tool for Python, designed to enable large-scale repository analyses. Key features are:</p> <ul> <li>Fast access to commit data, file changes and more</li> <li>Easy integration with <code>pandas</code> and <code>polars</code></li> <li>Simple-to-use Python interface</li> </ul>"},{"location":"#requirements","title":"Requirements","text":"<p>Requires Git 2.22 and Python 3.10 or higher.</p>"},{"location":"api-reference/","title":"API Reference","text":""},{"location":"api-reference/#diffhouse","title":"diffhouse","text":"<p>Git metadata extraction tool.</p>"},{"location":"api-reference/#diffhouse.Repo","title":"Repo","text":"<p>Git repository wrapper providing access to metadata.</p> <p>When used via its <code>load()</code> method or in a <code>with</code> statement, it sets up and queries a temporary clone to retrieve information.</p>"},{"location":"api-reference/#diffhouse.Repo.__init__","title":"__init__","text":"<pre><code>__init__(\n    location: str,\n    blobs: bool = False,\n    verbose: bool = False,\n)\n</code></pre> <p>Initialize the repository.</p> <p>Parameters:</p> Name Type Description Default <code>location</code> <code>str</code> <p>URL or local path pointing to a git repository.</p> required <code>blobs</code> <code>bool</code> <p>Whether to load file content and extract associated metadata.</p> <code>False</code> <code>verbose</code> <code>bool</code> <p>Whether to log progress to stdout.</p> <code>False</code>"},{"location":"api-reference/#diffhouse.Repo.load","title":"load","text":"<pre><code>load() -&gt; Repo\n</code></pre> <p>Load all repository data into memory.</p> <p>This is a convenience method to access properties without the <code>with</code> statement. Not recommended for large repositories.</p> <p>Returns:</p> Type Description <code>Repo</code> <p>self</p>"},{"location":"api-reference/#diffhouse.Repo.location","title":"location","text":"<pre><code>location: str\n</code></pre> <p>Location where the repository was cloned from.</p> <p>Can either be a remote URL or a local file URI based on the original input.</p>"},{"location":"api-reference/#diffhouse.Repo.branches","title":"branches","text":"<pre><code>branches: Iterable[str]\n</code></pre> <p>Branch names of the repository.</p>"},{"location":"api-reference/#diffhouse.Repo.tags","title":"tags","text":"<pre><code>tags: Iterable[str]\n</code></pre> <p>Tag names of the repository.</p>"},{"location":"api-reference/#diffhouse.Repo.commits","title":"commits","text":"<pre><code>commits: Iterable[Commit]\n</code></pre> <p>Main branch commit history.</p>"},{"location":"api-reference/#diffhouse.Repo.changed_files","title":"changed_files","text":"<pre><code>changed_files: Iterable[ChangedFile]\n</code></pre> <p>Files changed for each commit.</p>"},{"location":"api-reference/#diffhouse.Repo.diffs","title":"diffs","text":"<pre><code>diffs: Iterable[Diff]\n</code></pre> <p>Line-level changes within commits.</p>"},{"location":"api-reference/#diffhouse.Commit","title":"Commit","text":"<p>Commit metadata.</p>"},{"location":"api-reference/#diffhouse.Commit.commit_hash","title":"commit_hash","text":"<pre><code>commit_hash: str\n</code></pre> <p>Full hash of the commit.</p>"},{"location":"api-reference/#diffhouse.Commit.author_name","title":"author_name","text":"<pre><code>author_name: str\n</code></pre> <p>Author name.</p>"},{"location":"api-reference/#diffhouse.Commit.author_email","title":"author_email","text":"<pre><code>author_email: str\n</code></pre> <p>Author email.</p>"},{"location":"api-reference/#diffhouse.Commit.author_date","title":"author_date","text":"<pre><code>author_date: str\n</code></pre> <p>Original commit date and time.</p> <p>Adheres to the ISO 8601 datetime format (YYYY-MM-DDTHH:MM:SS\u00b1HH:MM).</p>"},{"location":"api-reference/#diffhouse.Commit.committer_name","title":"committer_name","text":"<pre><code>committer_name: str\n</code></pre> <p>Committer name.</p>"},{"location":"api-reference/#diffhouse.Commit.committer_email","title":"committer_email","text":"<pre><code>committer_email: str\n</code></pre> <p>Committer email.</p>"},{"location":"api-reference/#diffhouse.Commit.committer_date","title":"committer_date","text":"<pre><code>committer_date: str\n</code></pre> <p>Actual commit date and time.</p> <p>Adheres to the ISO 8601 datetime format (YYYY-MM-DDTHH:MM:SS\u00b1HH:MM).</p>"},{"location":"api-reference/#diffhouse.Commit.subject","title":"subject","text":"<pre><code>subject: str\n</code></pre> <p>Commit message subject.</p>"},{"location":"api-reference/#diffhouse.Commit.body","title":"body","text":"<pre><code>body: str\n</code></pre> <p>Commit message body.</p>"},{"location":"api-reference/#diffhouse.Commit.files_changed","title":"files_changed","text":"<pre><code>files_changed: int | None\n</code></pre> <p>Number of files changed in the commit.</p> <p>Available if <code>blobs = True</code>.</p>"},{"location":"api-reference/#diffhouse.Commit.lines_added","title":"lines_added","text":"<pre><code>lines_added: int | None\n</code></pre> <p>Number of lines inserted in the commit.</p> <p>Available if <code>blobs = True</code>.</p>"},{"location":"api-reference/#diffhouse.Commit.lines_deleted","title":"lines_deleted","text":"<pre><code>lines_deleted: int | None\n</code></pre> <p>Number of lines deleted in the commit.</p> <p>Available if <code>blobs = True</code>.</p>"},{"location":"api-reference/#diffhouse.ChangedFile","title":"ChangedFile","text":"<p>Snapshot of a file that was modified in a specific commit.</p>"},{"location":"api-reference/#diffhouse.ChangedFile.commit_hash","title":"commit_hash","text":"<pre><code>commit_hash: str\n</code></pre> <p>Full hash of the commit.</p>"},{"location":"api-reference/#diffhouse.ChangedFile.path_a","title":"path_a","text":"<pre><code>path_a: str\n</code></pre> <p>Path to the file before applying the commit's changes.</p>"},{"location":"api-reference/#diffhouse.ChangedFile.path_b","title":"path_b","text":"<pre><code>path_b: str\n</code></pre> <p>Path to the file after applying the commit's changes.</p> <p>Differs from <code>path_a</code> for renames and copies.</p>"},{"location":"api-reference/#diffhouse.ChangedFile.changed_file_id","title":"changed_file_id","text":"<pre><code>changed_file_id: str\n</code></pre> <p>Unique record identifier hashed from <code>commit_hash</code>, <code>path_a</code>, and <code>path_b</code>.</p>"},{"location":"api-reference/#diffhouse.ChangedFile.change_type","title":"change_type","text":"<pre><code>change_type: str\n</code></pre> <p>Single-letter code representing the change type.</p> <p>Most commonly one of <code>A</code> (added), <code>C</code> (copied), <code>D</code> (deleted), <code>M</code> (modified) or <code>R</code> (renamed). See git-status for all possible values.</p>"},{"location":"api-reference/#diffhouse.ChangedFile.similarity","title":"similarity","text":"<pre><code>similarity: int\n</code></pre> <p>Similarity index between the two file versions.</p> <p><code>0</code>-<code>100</code> for renames and copies, <code>100</code> otherwise.</p>"},{"location":"api-reference/#diffhouse.ChangedFile.lines_added","title":"lines_added","text":"<pre><code>lines_added: int\n</code></pre> <p>Number of lines added to the file in the commit.</p>"},{"location":"api-reference/#diffhouse.ChangedFile.lines_deleted","title":"lines_deleted","text":"<pre><code>lines_deleted: int\n</code></pre> <p>Number of lines deleted from the file in the commit.</p>"},{"location":"api-reference/#diffhouse.Diff","title":"Diff","text":"<p>Changes made to a hunk of code in a specific commit.</p>"},{"location":"api-reference/#diffhouse.Diff.commit_hash","title":"commit_hash","text":"<pre><code>commit_hash: str\n</code></pre> <p>Full hash of the commit.</p>"},{"location":"api-reference/#diffhouse.Diff.path_a","title":"path_a","text":"<pre><code>path_a: str\n</code></pre> <p>Path to the file before applying the commit's changes.</p>"},{"location":"api-reference/#diffhouse.Diff.path_b","title":"path_b","text":"<pre><code>path_b: str\n</code></pre> <p>Path to the file after applying the commit's changes.</p> <p>Differs from <code>path_a</code> for renames and copies.</p>"},{"location":"api-reference/#diffhouse.Diff.changed_file_id","title":"changed_file_id","text":"<pre><code>changed_file_id: str\n</code></pre> <p>Hash of <code>commit_hash</code>, <code>path_a</code>, and <code>path_b</code>.</p> <p>Use it to match with a <code>ChangedFile</code>.</p>"},{"location":"api-reference/#diffhouse.Diff.start_a","title":"start_a","text":"<pre><code>start_a: int\n</code></pre> <p>Line number that starts the hunk in file version A.</p>"},{"location":"api-reference/#diffhouse.Diff.length_a","title":"length_a","text":"<pre><code>length_a: int\n</code></pre> <p>Line count of the hunk in file version A.</p>"},{"location":"api-reference/#diffhouse.Diff.start_b","title":"start_b","text":"<pre><code>start_b: int\n</code></pre> <p>Line number that starts the hunk in file version B.</p>"},{"location":"api-reference/#diffhouse.Diff.length_b","title":"length_b","text":"<pre><code>length_b: int\n</code></pre> <p>Line count of the hunk in file version B.</p>"},{"location":"api-reference/#diffhouse.Diff.lines_added","title":"lines_added","text":"<pre><code>lines_added: int\n</code></pre> <p>Number of lines added.</p>"},{"location":"api-reference/#diffhouse.Diff.lines_deleted","title":"lines_deleted","text":"<pre><code>lines_deleted: int\n</code></pre> <p>Number of lines deleted.</p>"},{"location":"api-reference/#diffhouse.Diff.additions","title":"additions","text":"<pre><code>additions: list[str]\n</code></pre> <p>Text content of added lines.</p>"},{"location":"api-reference/#diffhouse.Diff.deletions","title":"deletions","text":"<pre><code>deletions: list[str]\n</code></pre> <p>Text content of deleted lines.</p>"},{"location":"user-guide/","title":"User Guide","text":"<p>This guide aims to cover the basic use cases of diffhouse. For the list of available repository objects and fields, check out the API Reference.</p>"},{"location":"user-guide/#installation","title":"Installation","text":"<p>Install diffhouse through PyPi:</p> <pre><code>pip install diffhouse\n</code></pre>"},{"location":"user-guide/#quickstart","title":"Quickstart","text":"<p>After importing the package in Python, construct a <code>Repo</code> object and define its target repository via the <code>location</code> argument; this can be either a remote URL or a local path. Pass <code>blobs = True</code> to extract file data as well.</p> <p>Calling <code>Repo.load()</code> will load all requested metadata into memory, which can then be accessed through the object's properties.</p> <p><code>blobs = True</code> requires a complete clone of the repository and therefore takes longer to execute. Omit this argument whenever possible.</p>"},{"location":"user-guide/#example-basic-querying","title":"Example: Basic Querying","text":"<pre><code>from diffhouse import Repo\n\nr = Repo(\n    location = 'https://github.com/octocat/Hello-World',\n    blobs = True\n).load()\n\nfor c in r.commits:\n    print(c.commit_hash[:10], c.committer_date, c.author_email)\n\nprint(r.branches)\n</code></pre> <p>outputs:</p> <pre><code>7fd1a60b01 2012-03-06T15:06:50-08:00 octocat@nowhere.com\n762941318e 2011-09-13T21:42:41-07:00 Johnneylee.rollins@gmail.com\n553c2077f0 2011-01-26T11:06:08-08:00 cameron@github.com\n['master', 'octocat-patch-1', 'test']\n</code></pre>"},{"location":"user-guide/#tabular-data","title":"Tabular Data","text":"<p><code>commits</code>, <code>changed_files</code> and <code>diffs</code> iterables can be passed directly to pandas and polars <code>DataFrame</code> constructors. No pre-processing is needed; table schemas will be inferred correctly.</p>"},{"location":"user-guide/#example-using-polars","title":"Example: Using Polars","text":"<pre><code>import polars as pl\n\ndf = pl.DataFrame(r.changed_files)\ndf.schema\n</code></pre> <p>outputs:</p> <pre><code>Schema([('commit_hash', String),\n        ('path_a', String),\n        ('path_b', String),\n        ('changed_file_id', String),\n        ('change_type', String),\n        ('similarity', Int64),\n        ('lines_added', Int64),\n        ('lines_deleted', Int64)])\n</code></pre> <p>diffhouse stores datetime values as ISO 8601 strings to preserve time zone offsets. When converting these to datetime objects in a <code>DataFrame</code>, use the parser's UTC option.</p>"},{"location":"user-guide/#lazy-loading","title":"Lazy Loading","text":"<p>For large repositories (100k+ commits), passing <code>blobs = True</code> and calling <code>load()</code> can take up gigabytes of memory; in these cases, it's better to use the lazy method:</p> <pre><code>with Repo(\n    location='https://github.com/octocat/Hello-World',\n    blobs = True\n) as r:\n    for d in r.diffs:\n        if d.lines_added == 3:\n            break\n</code></pre> <p>This has two benefits:</p> <ol> <li>Data is only loaded for accessed properties.</li> <li>Properties act as lazy iterators, only loading one record at a time.</li> </ol>"}]}